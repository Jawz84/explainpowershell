name: Deploy app to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  buildFrontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0'

    - uses: actions/checkout@v1

    - name: Set api url to correct url manually
      shell: pwsh
      run: |
          $uri = "https://$("${{ secrets.FUNCTION_APP_NAME }}".trim()).azurewebsites.net/api/"
          Set-Content -Path ./explainpowershell.frontend/wwwroot/appsettings.json -Value (@{BaseAddress = $uri} | ConvertTo-Json)
          Get-Content -path ./explainpowershell.frontend/wwwroot/appsettings.json

    - name: Run code generators
      shell: pwsh
      run: Get-ChildItem -Path ./explainpowershell.frontend/ -Recurse -Filter *_code_generator.ps1 | ForEach-Object { & $_.FullName }

    - name: Build with dotnet
      run: dotnet build --configuration Release explainpowershell.frontend

    - name: Publish with dotnet
      run: dotnet publish --configuration Release explainpowershell.frontend

    - name: Publish artifacts
      uses: actions/upload-artifact@master
      with:
        name: webapp
        path: ./explainpowershell.frontend/bin/Release/net6.0/publish/wwwroot

  buildBackend:
    name: Build Backend api
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0'

      - uses: actions/checkout@v1

      - name: Run code generators
        shell: pwsh
        run: Get-ChildItem -Path ./explainpowershell.analysisservice/ -Recurse -Filter *_code_generator.ps1 | ForEach-Object { & $_.FullName }

      - name: Build with dotnet
        shell: pwsh
        run: |
          Set-Location ./explainpowershell.analysisservice
          dotnet build --configuration Release

      - name: Publish artifacts
        uses: actions/upload-artifact@master
        with:
          name: api
          path: ./explainpowershell.analysisservice/bin/Release/net6.0

  deployFrontend:
    needs: buildFrontend
    name: Deploy Frontend
    runs-on: ubuntu-latest
    steps:

    - name: Download artifacts
      uses: actions/download-artifact@master
      with:
        name: webapp

    - name: Authenticate with Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_SERVICE_PRINCIPAL }}

    - name: Clean up previous deployment
      shell: pwsh
      run: |
          az storage blob delete-batch --account-name "${{ secrets.STORAGE_ACCOUNT_NAME }}".trim() --source `$web 

    - name: Deploy to storage account
      shell: pwsh
      run: |
          az storage blob upload-batch --account-name "${{ secrets.STORAGE_ACCOUNT_NAME }}".trim() --source ./ --destination `$web

    - name: Purge Azure CDN
      shell: pwsh
      run: |
        if ( -not [String]::IsNullOrEmpty("${{ secrets.AZURE_CDN_ENDPOINT }}".trim()) ) {
          az cdn endpoint purge -n "${{ secrets.AZURE_CDN_ENDPOINT }}".trim() --profile-name "${{ secrets.AZURE_CDN_ENDPOINT }}".trim() --content-paths "/*" --resource-group "${{ secrets.RESOURCE_GROUP_NAME }}".trim()
          "Az CDN endpoint purged"
        }

  deployBackend:
    needs: buildBackend
    name: Deploy Backend api
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@master
        with:
          name: api

      - name: Authenticate with Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SERVICE_PRINCIPAL }}

      - name: Get functionapp publish profile
        id: publishprofile
        shell: pwsh
        run: |
          $json = az functionapp deployment list-publishing-profiles --name "${{ secrets.FUNCTION_APP_NAME }}".trim() --resource-group "${{ secrets.RESOURCE_GROUP_NAME }}".trim()
          $funcProfile = $(
              "<publishData>"
              foreach ($publishProfile in ($json | ConvertFrom-Json)) {
                  "<publishProfile "
                  foreach ($prop in $publishProfile.psobject.Properties | where name -ne databases) {
                      "$($prop.Name)=`"$($prop.Value)`" "
                  }
                  "><databases /></publishProfile>"
              }
              "</publishData>"
          ) -join ''

          ##Write-Output "::add-mask::$funcProfile"
          write-output $funcProfile
          Write-Output "::set-output name=profile::$funcProfile"

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ secrets.FUNCTION_APP_NAME }}
          package: ./
          publish-profile: ${{ steps.publishprofile.outputs.profile }}

      - name: Calculate new HelpMetaData
        uses: azure/powershell@v1
        with: 
          inlineScript: |
            Get-AzFunctionApp
            | Where-Object { $_.Name -match 'powershellexplainer' -and $_.Status -eq 'running' }
            | ForEach-Object { Invoke-RestMethod -Uri "https://$($_.DefaultHostName)/api/MetaData?refresh=true" }
          azPSVersion: '6.1.0'