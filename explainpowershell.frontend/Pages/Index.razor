@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using System.Text.Json;
@page "/"
@inject HttpClient Http

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    <MudText Typo="Typo.h3" GutterBottom="true">Explain PowerShell</MudText>
    <MudText Class="mb-8">Get explanation for Powershell code oneliner</MudText>
    <MudContainer MaxWidth="MaxWidth.Medium" Class="mt-16">
        <MudCard>
            <MudForm>
                <MudCardContent>
                    <MudTextField @bind-Value="InputValue" T="string" Label="PowerShell oneliner to analyze" Required="true" RequiredError="Please supply PowerShell code" AutoFocus="true" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" 
                    OnClick="@OnInitializedAsync">Submit</MudButton>
                </MudCardActions>
            </MudForm>
        </MudCard>
    </MudContainer>
    <MudDivider DividerType="DividerType.Middle" Class="my-6" hidden="@hasNoExplanations"/>
    <MudText>@expandedCode</MudText>
    <MudDivider DividerType="DividerType.Middle" Class="my-6" hidden="@hasNoExplanations"/>
    <MudTable Items="@explanations" Hover="true" Breakpoint="Breakpoint.Sm" hidden="@hasNoExplanations">
        <HeaderContent>
            <MudTh>Original Extent</MudTh>
            <MudTh>CommandName</MudTh>
            <MudTh>Synopsis</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Original Extent">@context.OriginalExtent</MudTd>
            <MudTd DataLabel="CommandName">@context.CommandName</MudTd>
            <MudTd DataLabel="Synopsis">@context.Synopsis</MudTd>
        </RowTemplate>
    </MudTable>
    <MudDivider DividerType="DividerType.Middle" Class="my-6" hidden="@hasNoExplanations"/>
    <MudTable Items="@modules" Hover="true" Breakpoint="Breakpoint.Sm" hidden="@hasNoExplanations">
        <HeaderContent>
            <MudTh>Detected Modules</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Module Name">@context.ModuleName</MudTd>
        </RowTemplate>
    </MudTable>
</MudContainer>

@code {
    private List<Explanation> explanations {get; set;} = new();
    private AnalysisResult analysisResult {get;set;} = new();

    private string expandedCode {get; set;}

    private List<Module> modules {get; set;}

    private bool hasNoExplanations {
        get {
            if (explanations == null) {
                return true;
            }

            return explanations.Count <= 0;
        }
    }

    private string InputValue { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(InputValue))
        {
            var code = new Code() { PowershellCode = InputValue };

            var temp = await Http.PostAsJsonAsync<Code>("SyntaxAnalyzer", code);

            analysisResult = await JsonSerializer.DeserializeAsync<AnalysisResult>(temp.Content.ReadAsStream());
            explanations = analysisResult.Explanations;
            modules = analysisResult.DetectedModules;
            expandedCode = analysisResult.ExpandedCode;

            Console.WriteLine(explanations[0].Synopsis);
        }
    }
}