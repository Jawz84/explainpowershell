@page "/"

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="@TitleMargin">
    <MudContainer MaxWidth="MaxWidth.Medium">
        @if (ShouldShrinkTitle) {
            <MudText Typo="Typo.h6" GutterBottom="true">Explain PowerShell</MudText>
        }
        else {
            <MudText Typo="Typo.h3" GutterBottom="true">Explain PowerShell</MudText>
            <MudText Class="mb-4">Get explanation for PowerShell code oneliner, inspired by <MudLink Href="https://explainshell.com/">explainshell.com</MudLink> and <MudLink Href="http://showthedocs.com/">showthedocs.com</MudLink>.</MudText>
        }
        <MudCard Elevation="2">
            <MudForm>
                <MudCardContent>
                    <MudTextField @bind-Value="InputValue" Immediate="true" T="string" Label="PowerShell oneliner to explain" AutoFocus="true" KeyUpPreventDefault="true" OnKeyUp="OnKeyUp"/>
                    @if (RequestHasError) {<MudAlert class="mt-2" OnClick="@AcknowledgeAlert" Severity="Severity.Error">@ReasonPhrase</MudAlert>}
                </MudCardContent>
                <MudCardActions>
                    @if (Waiting)
                    {
                        <MudProgressCircular Color="Color.Primary" Indeterminate="true" Size="Size.Small" Class="ml-auto"/>
                    }
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@DoSearch" Disabled="@Waiting" >Explain</MudButton>
                </MudCardActions>
            </MudForm>
        </MudCard>
    </MudContainer>
    <MudDivider DividerType="DividerType.Middle" Class="my-6" hidden="@HideExpandedCode"/>
    <MudText Align="Align.Center" hidden="@HideExpandedCode">@ExpandedCode</MudText>
    <MudDivider DividerType="DividerType.Middle" Class="my-6" hidden="@HasNoExplanations"/>
    <MudContainer MaxWidth="MaxWidth.Medium">
        <MudTreeView Items="TreeItems">
            <ItemTemplate>
                <MudTreeViewItem @bind-Expanded="@context.IsExpanded" Items="@context.Children" >
                    <Content>
                        <MudTreeViewItemToggleButton @bind-Expanded="@context.IsExpanded" Visible="@context.HasChildren" /> 
                        @if(!string.IsNullOrEmpty(@context.Item.HelpResult?.Syntax)) 
                        {
                            <MudGrid Spacing="0">
                                <MudTooltip Text="click for more details" Placement="Placement.End">
                                    <MudItem @onclick="@(() => ToggleCommandDetailsPopoverIsOpen(context.Item.Id))" >
                                        <ExplainCard Context="@context.Item"/>
                                        <MudPopover Class="ma-2" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft" OverflowBehavior="OverflowBehavior.FlipNever" Direction="Direction.Bottom" Open="@CommandDetailsPopoverIsOpen[context.Item.Id]"> 
                                            <MudSimpleTable Class="pa-2" Style="width:auto;">
                                                <tbody>
                                                    @if(! string.IsNullOrEmpty(@context.Item.HelpResult?.Description))
                                                    {
                                                        <tr>
                                                            <td>Description</td>
                                                            <td>@context.Item.HelpResult?.Description</td>
                                                        </tr>
                                                    }
                                                    @if(! string.IsNullOrEmpty(@context.Item.HelpResult?.Aliases))
                                                    {
                                                        <tr>
                                                            <td>Aliases</td>
                                                            <td>@context.Item.HelpResult?.Aliases</td>
                                                        </tr>
                                                    }
                                                    @if(! string.IsNullOrEmpty(@context.Item.HelpResult?.ParameterSetNames))
                                                    {
                                                        <tr>
                                                            <td>ParameterSetNames</td>
                                                            <td>@context.Item.HelpResult?.ParameterSetNames</td>
                                                        </tr>
                                                    }
                                                    @if(! string.IsNullOrEmpty(@context.Item.HelpResult?.DefaultParameterSet))
                                                    {
                                                        <tr>
                                                            <td>DefaultParameterSet</td>
                                                            <td>@context.Item.HelpResult?.DefaultParameterSet</td>
                                                        </tr>
                                                    }
                                                    @if(! string.IsNullOrEmpty(@context.Item.HelpResult?.InputTypes))
                                                    {
                                                        <tr>
                                                            <td>InputTypes</td>
                                                            <td>@context.Item.HelpResult?.InputTypes</td>
                                                        </tr>
                                                    }
                                                    @if(! string.IsNullOrEmpty(@context.Item.HelpResult?.ReturnValues))
                                                    {
                                                        <tr>
                                                            <td>ReturnValues</td>
                                                            <td>@context.Item.HelpResult?.ReturnValues</td>
                                                        </tr>
                                                    }
                                                    @if(! string.IsNullOrEmpty(@context.Item.HelpResult?.RelatedLinks))
                                                    {
                                                        <tr>
                                                            <td>RelatedLinks</td>
                                                            <td>
                                                                <ul style="list-style:disc">
                                                                    @foreach(var link in context.Item.HelpResult?.RelatedLinks.Split(", ")) {
                                                                        <li><MudLink Href="@link" Target="_blank">@link</MudLink></li>
                                                                    }
                                                                </ul>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </MudSimpleTable>
                                            <MudButton Class="ma-2" OnClick="@(() => ToggleCommandDetailsPopoverIsOpen(context.Item.Id))">Close</MudButton>
                                        </MudPopover>
                                    </MudItem>
                                </MudTooltip>
                                <MudItem>
                                    <MudButton Class="ma-2" OnClick="@(() => ToggleSyntaxPopoverIsOpen(context.Item.Id))">Syntax</MudButton>
                                </MudItem>
                                <MudItem>
                                    <MudPopover Class="pa-2" Style="width:auto;" AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.TopLeft" OverflowBehavior="OverflowBehavior.FlipNever" Direction="Direction.Right" Open="@SyntaxPopoverIsOpen[context.Item.Id]">
                                        @foreach (var line in @context.Item.HelpResult?.Syntax.Split("\n")) {
                                            @foreach (var param in line
                                                .Replace(context.Item.CommandName,$"{context.Item.CommandName}\n")
                                                .Replace("] [","]\n[")
                                                .Replace("[-", "\n[-")
                                                .Replace(" -","\n-")
                                                .Replace("[\n","[")
                                                .Replace($"\n{context.Item.CommandName}",$"\n--\n{context.Item.CommandName}")
                                                .Split("\n")) {
                                                <MudItem>
                                                    <MudHighlighter 
                                                        Class="mud-primary-text"
                                                        Style="background-color:transparent;font-weight:bold"
                                                        Text="@param" 
                                                        HighlightedText="@context.Item.CommandName" />
                                                </MudItem>
                                            }
                                        }
                                        <MudButton Class="ma-2" OnClick="@(() => ToggleSyntaxPopoverIsOpen(context.Item.Id))">Close</MudButton>
                                    </MudPopover>
                                </MudItem>
                            </MudGrid>
                        }
                        else
                        {
                            <ExplainCard Context="@context.Item" />
                        }
                    </Content>
                </MudTreeViewItem>
            </ItemTemplate>
        </MudTreeView>
    </MudContainer>
</MudContainer>
